#lang plai
(print-only-errors #t)

;;; EECS 322 L Renaming -- Test
;;; Geoff Hill <GeoffreyHill2012@u.northwestern.edu>
;;; Spring 2011

(require (file "input.rkt"))
(require (file "renaming.rkt"))

(test (rename-L2prog (build-L2prog '(((eax <- 9)))))
      (build-L2prog '(((eax <- 9)))))
(test (rename-L2prog (build-L2prog '((:go (eax <- 1)))))
      (build-L2prog '((:L0 (eax <- 1)))))
(test (rename-L2prog (build-L2prog '((:go (a <- 1)))))
      (build-L2prog '((:L0 (v0 <- 1)))))
(test (rename-L2prog (build-L2prog '((:go (a <- 1))
                                     (:also (f <- 3) (g <- 7)))))
      (build-L2prog '((:L0 (v0 <- 1))
                      (:L1 (v0 <- 3) (v1 <- 7)))))
(test (rename-L2prog (build-L2prog '((:go (a <- 1))
                                     (:also (f <- 3) (f <- 7)))))
      (build-L2prog '((:L0 (v0 <- 1))
                      (:L1 (v0 <- 3) (v0 <- 7)))))
(test (rename-L2prog (build-L2prog '(((a <- 19) ((mem ebp -4) <- a) (eax <- (print a))))))
      (build-L2prog '(((v0 <- 19) ((mem ebp -4) <- v0) (eax <- (print v0))))))
(test (rename-L2prog (build-L2prog '((:go (v1 <- -8) (v1 <- :t1) (eax <- (print v1)))
                                     (:t1 (v2 <- 12)))))
      (build-L2prog '((:L0 (v0 <- -8) (v0 <- :L1) (eax <- (print v0)))
                      (:L1 (v0 <- 12)))))
(test (rename-L2prog (build-L2prog '((:go) (:a) (:b) (:c) (:d) (:e) (:f) (:g) (:h) (:i) (:j))))
      (build-L2prog '((:L0) (:L1) (:L2) (:L3) (:L4) (:L5)
                      (:L6) (:L7) (:L8) (:L9) (:L10))))
(test (rename-L2prog (build-L2prog '((:go (a <- 1)))))
      (build-L2prog '((:L0 (v0 <- 1)))))
(test (rename-L2prog (build-L2prog '((:start (t <- 11) (e <- :fn1) (ecx <- t) (call :fn1))
                                     (:fn0 (g <- ecx) (eax <- (print g)) (return))
                                     (:fn1 (g <- ecx) (eax <- (allocate g g)) (return)))))
      (build-L2prog '((:L0 (v0 <- 11) (v1 <- :L1) (ecx <- v0) (call :L1))
                      (:L2 (v0 <- ecx) (eax <- (print v0)) (return))
                      (:L1 (v0 <- ecx) (eax <- (allocate v0 v0)) (return)))))
(test (rename-L2prog (build-L2prog '((:start (t <- 11) (e <- :fn1) (ecx <- t) (call e))
                                     (:fn0 (g <- ecx) (eax <- (print g)) (tail-call :fn1))
                                     (:fn1 (g <- ecx) (eax <- (allocate g g)) (tail-call :fn0)))))
      (build-L2prog '((:L0 (v0 <- 11) (v1 <- :L1) (ecx <- v0) (call v1))
                      (:L2 (v0 <- ecx) (eax <- (print v0)) (tail-call :L1))
                      (:L1 (v0 <- ecx) (eax <- (allocate v0 v0)) (tail-call :L2)))))
(test (rename-L2prog (build-L2prog '((:go (a <- 1) :next (goto :go)))))
      (build-L2prog '((:L0 (v0 <- 1) :L1 (goto :L0)))))
(test (rename-L2prog (build-L2prog '((:go (a <- 1) :next (goto :next)))))
      (build-L2prog '((:L0 (v0 <- 1) :L1 (goto :L1)))))
(test (rename-L2prog (build-L2prog '((:start (t <- 11) (d <- -2) (cjump d <= t :good :bad) :bad :good)
                                     (:fn0 (g <- ecx) (eax <- (print g)) (tail-call :fn1))
                                     (:fn1 (g <- ecx) (eax <- (allocate g g)) (tail-call :fn0)))))
      (build-L2prog '((:L0 (v0 <- 11) (v1 <- -2) (cjump v1 <= v0 :L1 :L2) :L2 :L1)
                      (:L3 (v0 <- ecx) (eax <- (print v0)) (tail-call :L4))
                      (:L4 (v0 <- ecx) (eax <- (allocate v0 v0)) (tail-call :L3)))))

(printf "tests completed~n")
